#!/bin/bash

set -euo pipefail

DARKSKY_API_KEY="39f99ce600abbf9cc37dfbe0142b5905"
IPSTACK_API_KEY="4ee7d0f28bc3f27520acb242fbefbb88"

GEOIP_JSON="${HOME}/.cache/geoip.json"
WEATHER_JSON="${HOME}/.cache/weather.json"

UPDATE_INTERVAL=15

# Retrieve new geographic data.
if [ -z "$(find "${GEOIP_JSON}" -mmin -"${UPDATE_INTERVAL}" 2>/dev/null)" ]; then
    rm -f "${GEOIP_JSON}"

    GEOIP_URL="http://api.ipstack.com/check?access_key=${IPSTACK_API_KEY}"
    curl --silent --fail "${GEOIP_URL}" -o "${GEOIP_JSON}"
fi

# Exit if geographic data is invalid.
if [ -z "$(jq '.ip' "${GEOIP_JSON}")" ]; then
    exit 1
fi

CITY=$(jq -r '.city' "${GEOIP_JSON}")
LATITUDE=$(jq -r '.latitude' "${GEOIP_JSON}")
LONGITUDE=$(jq -r '.longitude' "${GEOIP_JSON}")
REGION=$(jq -r '.region_code' "${GEOIP_JSON}")

# Retrieve forecast data.
if [ -z "$(find "${WEATHER_JSON}" -mmin -"${UPDATE_INTERVAL}" 2>/dev/null)" ]; then
    rm -f "${WEATHER_JSON}"

    WEATHER_URL="https://api.darksky.net/forecast/${DARKSKY_API_KEY}/${LATITUDE},${LONGITUDE}"
    curl --silent --fail "${WEATHER_URL}" -o "${WEATHER_JSON}"
fi

# Exit if forecast data is invalid.
if [ -z "$(jq '.currently' "${WEATHER_JSON}")" ]; then
    exit 1
fi

SUMMARY=$(jq -r '.currently.summary' "${WEATHER_JSON}")
TEMP=$(jq -r '.currently.temperature' "${WEATHER_JSON}" | awk '{ print int($1) }')

# Output the basic forecast with Conky formatting.
echo "\${alignc}\${font Cantarell:light:size=48}${TEMP}Â°F\${font}"
echo "\${voffset 30}\${alignc}\${font Cantarell:bold:size=16}${SUMMARY}\${font}"
echo "\${voffset 15}\${alignc}\${font Cantarell:size=11}${CITY}, ${REGION}\${font}"
