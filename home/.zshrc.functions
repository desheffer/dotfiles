alias :qa='exit'
alias chown.='sudo chown -R "${USER}:" .'
alias df='df -h'
alias dkr-sh='docker run -it --rm --entrypoint sh'
alias dkr-sh-v='docker run -it --rm --entrypoint sh -v "$(pwd)":/pwd'
alias dkr-stop='docker stop $(docker ps -q)'
alias gap='git add -p'
alias gca='git commit --amend'
alias gcm='git commit -m'
alias gcp='git checkout -p'
alias gs='git status'
alias ls="ls -N --color=auto"
alias l="ls -lhF"
alias ll="ls -alhF"
alias serve='python3 -m http.server 8000'
alias ta='tmux attach 2>/dev/null || tmux new-session'
alias tmux='tmux -2u'
alias vi='vim'
alias vim='vim -p'

# Quickly search for and open a file.
function g {
    [ -z "$*" ] && return
    tmp=$(mktemp)
    ag --hidden --ignore ".git" "$*" | fzf -m > ${tmp}
    [ -s ${tmp} ] && vim -q ${tmp} +copen
    cat ${tmp} | sed 's/:[0-9]*:.*$//'
    rm ${tmp}
}

# Quickly search for and open all matches.
function ga {
    [ -z "$*" ] && return
    tmp=$(mktemp)
    ag --hidden --ignore ".git" "$*" > ${tmp}
    [ -s ${tmp} ] && vim -q ${tmp} +copen
    cat ${tmp} | sed 's/:[0-9]*:.*$//'
    rm ${tmp}
}

# Quickly change to the root directory of a repository.
function d {
    git rev-parse 2>/dev/null && cd "$(git rev-parse --show-cdup)"
}

# Safely reset a Git repository to match a remote branch.
function git-reset {
    git rev-parse 2>/dev/null || return

    timestamp="$(date '+%Y%m%d%H%M%S')"
    oldBranch="$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)"
    newBranch="$1"

    if [ -z "${newBranch}" ]; then
        newBranch="${oldBranch}"
    fi

    cd "$(git rev-parse --show-cdup)"
    git add .
    git commit -m "auto commit at ${timestamp}" >/dev/null
    if [ $? -eq 0 ]; then
        echo "Creating backup: ${oldBranch}-${timestamp}"
        git branch "${oldBranch}-${timestamp}"
    fi

    git checkout "${newBranch}" >/dev/null 2>/dev/null
    git fetch origin >/dev/null
    git reset --hard "origin/${newBranch}"
}
