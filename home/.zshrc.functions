alias :qa='exit'
alias chown.='sudo chown -R "${USER}:" .'
alias df='df -h'
alias dkr-sh='docker run -it --rm --entrypoint sh'
alias dkr-sh-v='docker run -it --rm --entrypoint sh -v "$(pwd)":/pwd'
alias dkr-stop='[ ! -z "$(docker ps -q)" ] && docker stop $(docker ps -q)'
alias ga='git add'
alias gap='ga -p'
alias gb='git branch'
alias gc='git commit --verbose'
alias gca='gc --amend'
alias gco='git checkout'
alias gd='git diff'
alias gdc='gd --cached'
alias gl='git log'
alias gll='git listlog'
alias glp='gl -p'
alias gm='git merge'
alias gp='git pull'
alias gpr='gp --rebase'
alias gP='git push'
alias gPf='gP --force-with-lease'
alias gr='git rebase'
alias gri='gr -i'
alias grs='git restore --staged'
alias gR='git-reset'
alias gs='git status'
alias gsp='git show -p'
alias l='exa -lhF'
alias ll='exa -alhF'
alias ls='exa'
alias serve='python3 -m http.server 8000'
alias ta='tmux attach 2>/dev/null || tmux new-session'
alias tmux='tmux -2u'

# Quickly change to the root directory of a repository.
function d {
    git rev-parse 2>/dev/null && cd "$(git rev-parse --show-cdup)"
}

# Safely reset a Git repository to match a remote branch.
function git-reset {
    git rev-parse 2>/dev/null || return

    timestamp="$(date '+%Y%m%d%H%M%S')"
    oldBranch="$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)"
    newBranch="$1"

    if [ -z "${newBranch}" ]; then
        newBranch="${oldBranch}"
    fi

    cd "$(git rev-parse --show-cdup)"
    git add .
    git commit -m "auto commit at ${timestamp}" >/dev/null
    if [ $? -eq 0 ]; then
        echo "Creating backup: ${oldBranch}-${timestamp}"
        git branch "${oldBranch}-${timestamp}"
    fi

    git checkout "${newBranch}" >/dev/null 2>/dev/null
    git fetch origin >/dev/null
    git reset --hard "origin/${newBranch}"
}

function github-https-to-ssh {
    sshUrl="$(git remote get-url origin | sed 's|https://github.com/\(.*\)|git@github.com:\1|')"
    git remote set-url origin "${sshUrl}"
}
