function __git_status {
    local BRANCH=""
    local COMMIT=""
    local TAG=""

    STATUS=$(__git_ps1 "%s")

    [ -z "$STATUS" ] && return

    HEAD=$(echo "$STATUS" | cut -d"|" -f1 | cut -d" " -f1)
    REBASE=$(echo "$STATUS" | cut -d "|" -s -f 2)

    if [[ "$HEAD" =~ ^\(.*\.\.\.\)$ ]]; then
        echo -en "${COMMIT} ${HEAD}"
    elif [[ "$HEAD" =~ ^\(.*\)$ ]]; then
        echo -en "${TAG} ${HEAD:1:-1}"
    else
        echo -en "${BRANCH} ${HEAD}"
    fi

    [ ! -z "$REBASE" ] && echo -en "  (${REBASE})"
}

function __generate_prompt {
    local SEP=""

    if [ -z "$PROMPT_COLOR" ]; then
        PROMPT_COLOR=11
    fi

    if [ -z "$PROMPT_USER" ]; then
        PROMPT_USER="\u@\h"
    fi

    local RESET=$(tput sgr0)
    local A_FG=$(tput setaf 0)
    local A_BG=$(tput setab $PROMPT_COLOR)
    local A_SEP_FG=$(tput setaf $PROMPT_COLOR)
    local B_FG=$(tput setaf 15)
    local B_BG=$(tput setab 237)
    local B_SEP_FG=$(tput setaf 237)
    local C_FG=$(tput setaf $PROMPT_COLOR)

    # Set window title.
    echo -en "\033]0;\u@\h:\w\a"

    # Generate powerline prompt.
    echo -en "\n"
    echo -en "${RESET}${A_BG}${A_FG}"
    echo -en "  ${PROMPT_USER}  "
    echo -en "${RESET}${B_BG}${A_SEP_FG}${SEP}${B_FG}"
    echo -en "  \w  "
    echo -en "${RESET}${B_SEP_FG}${SEP}${C_FG}"
    echo -en "  \$(__git_status)  "
    echo -en "${RESET}"
    echo -en "\n\$ "
}

function __set_prompt {
    PS1="$(__generate_prompt)"
    PROMPT_COMMAND=
}

# Provide a fallback prompt.
PS1="\n\u@\h:\w\n\$ "

# Upgrade to a color prompt.
[ "${COLORTERM}" == "truecolor" ] && PROMPT_COMMAND="__set_prompt"
